// <auto-generated />
using System;
using EFCore.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EFCore.Migrations
{
    [DbContext(typeof(DataDBContext))]
    partial class DataDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079");

            modelBuilder.Entity("EFCore.Model.City", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ProvinceID");

                    b.Property<string>("areaCode");

                    b.Property<string>("name");

                    b.HasKey("ID");

                    b.HasIndex("ProvinceID");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            ProvinceID = 1,
                            name = "汕头"
                        },
                        new
                        {
                            ID = 2,
                            ProvinceID = 1,
                            name = "广州"
                        },
                        new
                        {
                            ID = 3,
                            ProvinceID = 1,
                            name = "深圳"
                        });
                });

            modelBuilder.Entity("EFCore.Model.CityCompany", b =>
                {
                    b.Property<int>("CityID");

                    b.Property<int>("CompanyID");

                    b.HasKey("CityID", "CompanyID");

                    b.HasIndex("CompanyID");

                    b.ToTable("CityCompanies");
                });

            modelBuilder.Entity("EFCore.Model.Company", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreateTime");

                    b.Property<string>("LegalPerson");

                    b.Property<string>("Name");

                    b.HasKey("ID");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("EFCore.Model.Mayor", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CityID");

                    b.Property<string>("name");

                    b.Property<int>("sex");

                    b.HasKey("ID");

                    b.HasIndex("CityID")
                        .IsUnique();

                    b.ToTable("Mayors");
                });

            modelBuilder.Entity("EFCore.Model.Province", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("name");

                    b.Property<int>("population");

                    b.HasKey("ID");

                    b.ToTable("Provinces");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            name = "广东",
                            population = 9000000
                        },
                        new
                        {
                            ID = 2,
                            name = "福建",
                            population = 8000000
                        });
                });

            modelBuilder.Entity("EFCore.Model.City", b =>
                {
                    b.HasOne("EFCore.Model.Province", "Province")
                        .WithMany("Cities")
                        .HasForeignKey("ProvinceID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("EFCore.Model.CityCompany", b =>
                {
                    b.HasOne("EFCore.Model.City", "City")
                        .WithMany("CityCompanies")
                        .HasForeignKey("CityID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("EFCore.Model.Company", "Company")
                        .WithMany("CityCompanies")
                        .HasForeignKey("CompanyID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("EFCore.Model.Mayor", b =>
                {
                    b.HasOne("EFCore.Model.City", "City")
                        .WithOne("Mayor")
                        .HasForeignKey("EFCore.Model.Mayor", "CityID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
